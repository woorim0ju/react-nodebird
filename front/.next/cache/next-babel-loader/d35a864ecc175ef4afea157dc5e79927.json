{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\nodebird\\\\front\\\\components\\\\CommentForm.js\";\nimport { Form, Input, Button } from 'antd';\nimport React, { useCallback } from 'react';\nimport useInput from '../hooks/useInput';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentForm = ({\n  post\n}) => {\n  //const { me } = useSelector((state) => state.user);\n  //const id = me && me.id //me?.id; 같은 코드, 로그인 하기 전, 내 아이디(로그인 후)\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  }); //es6 로그인 안했을 경우(me= null) 대비용 추가\n\n  const [commentText, onChangeCommentText] = useInput(''); //hooks folder\n\n  const onSubmitForm = useCallback(() => {\n    console.log(post.id, commentText); //게시글의 id의 댓글이기 때문에 post props로 전달받음\n  }, [commentText]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitForm,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: 'relative',\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: 'absolute',\n          right: 0,\n          bottom: -40\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"twit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["C:/project/nodebird/front/components/CommentForm.js"],"names":["Form","Input","Button","React","useCallback","useInput","PropTypes","useSelector","CommentForm","post","id","state","user","me","commentText","onChangeCommentText","onSubmitForm","console","log","position","margin","right","bottom","propTypes","object","isRequired"],"mappings":";AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC9B;AACA;AACA,QAAMC,EAAE,GAAGH,WAAW,CAAEI,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB,CAH8B,CAGwB;;AACtD,QAAM,CAACI,WAAD,EAAcC,mBAAd,IAAqCV,QAAQ,CAAC,EAAD,CAAnD,CAJ8B,CAI2B;;AAEzD,QAAMW,YAAY,GAAGZ,WAAW,CAAC,MAAM;AACnCa,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAI,CAACC,EAAjB,EAAqBI,WAArB,EADmC,CACA;AACtC,GAF+B,EAE7B,CAACA,WAAD,CAF6B,CAAhC;AAIA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,YAAhB;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEG,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,MAAM,EAAE;AAAhC,OAAlB;AAAA,8BACI,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAEN,WAAvB;AAAoC,QAAA,QAAQ,EAAEC,mBAA9C;AAAmE,QAAA,IAAI,EAAE;AAAzE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAEI,UAAAA,QAAQ,EAAE,UAAZ;AAAwBE,UAAAA,KAAK,EAAE,CAA/B;AAAkCC,UAAAA,MAAM,EAAE,CAAC;AAA3C,SAAf;AAAgE,QAAA,IAAI,EAAC,SAArE;AAA+E,QAAA,QAAQ,EAAC,QAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAlBD;;AAoBAd,WAAW,CAACe,SAAZ,GAAwB;AACpBd,EAAAA,IAAI,EAAEH,SAAS,CAACkB,MAAV,CAAiBC;AADH,CAAxB;AAIA,eAAejB,WAAf","sourcesContent":["import { Form, Input, Button } from 'antd';\nimport React, { useCallback } from 'react';\nimport useInput from '../hooks/useInput';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nconst CommentForm = ({ post }) => {\n    //const { me } = useSelector((state) => state.user);\n    //const id = me && me.id //me?.id; 같은 코드, 로그인 하기 전, 내 아이디(로그인 후)\n    const id = useSelector((state) => state.user.me?.id); //es6 로그인 안했을 경우(me= null) 대비용 추가\n    const [commentText, onChangeCommentText] = useInput(''); //hooks folder\n\n    const onSubmitForm = useCallback(() => {\n        console.log(post.id, commentText); //게시글의 id의 댓글이기 때문에 post props로 전달받음\n    }, [commentText]);\n\n    return (\n        <Form onFinish={onSubmitForm}>\n            <Form.Item style={{ position: 'relative', margin: 0 }}>\n                <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4} />\n                <Button style={{ position: 'absolute', right: 0, bottom: -40 }} type='primary' htmlType='submit'>twit</Button>\n            </Form.Item>\n        </Form>\n    )\n};\n\nCommentForm.propTypes = {\n    post: PropTypes.object.isRequired,\n}\n\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}