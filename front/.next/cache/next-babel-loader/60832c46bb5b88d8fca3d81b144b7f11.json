{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, createStore, compose } from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\n\nvar configureStore = function configureStore() {\n  var middlewares = []; //redux 기능 확장 - enhancer\n\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) //배포용\n  : composeWithDevTools(applyMiddleware.apply(void 0, middlewares)); //개발용-devtools 연결\n\n  var store = createStore(reducer, enhancer);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/project/nodebird/front/store/configureStore.js"],"names":["createWrapper","applyMiddleware","createStore","compose","composeWithDevTools","reducer","configureStore","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,oBAA5B;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,MAAMC,WAAW,GAAG,EAApB,CADyB,CAEzB;;AACA,MAAMC,QAAQ,GAAG,QACfL,OAAO,CAACF,eAAe,MAAf,SAAmBM,WAAnB,CAAD,CADQ,CAC0B;AAD1B,IAEfH,mBAAmB,CAACH,eAAe,MAAf,SAAmBM,WAAnB,CAAD,CAFrB,CAHyB,CAK8B;;AAE1D,MAAME,KAAK,GAAGP,WAAW,CAACG,OAAD,EAAUG,QAAV,CAAzB;AACA,SAAOC,KAAP;AACA,CATD;;AAWA,IAAMC,OAAO,GAAGV,aAAa,CAACM,cAAD,EAAiB;AAACK,EAAAA,KAAK;AAAN,CAAjB,CAA7B;AAEA,eAAeD,OAAf","sourcesContent":["import {createWrapper} from 'next-redux-wrapper';\nimport { applyMiddleware, createStore, compose } from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\n\nconst configureStore = () => {\n    const middlewares = [];\n    //redux 기능 확장 - enhancer\n    const enhancer = process.env.NODE_ENV === 'production'\n    ? compose(applyMiddleware(...middlewares)) //배포용\n    : composeWithDevTools(applyMiddleware(...middlewares)) //개발용-devtools 연결\n\n const store = createStore(reducer, enhancer);\n return store;\n};\n\nconst wrapper = createWrapper(configureStore, {debug: process.env.NODE_ENV === 'development'});\n\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}