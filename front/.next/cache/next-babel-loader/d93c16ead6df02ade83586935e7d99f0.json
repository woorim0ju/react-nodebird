{"ast":null,"code":"import { all, fork, delay, put } from 'redux-saga/effects';\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    yield delay(1000); //const result = yield call(addPostAPI, action.data)\n\n    yield put({\n      type: 'ADD_POST_SUCCESS' //data: result.data\n\n    });\n  } catch (err) {\n    yield put({\n      type: 'ADD_POST_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield throttle('ADD_POST_REQUEST', addPost, 1000);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["C:/project/nodebird/front/sagas/post.js"],"names":["all","fork","delay","put","addPostAPI","data","axios","post","addPost","action","type","err","response","watchAddPost","throttle","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,KAApB,EAA2BC,GAA3B,QAAsC,oBAAtC;;AAGA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtB,SAAOC,KAAK,CAACC,IAAN,CAAW,WAAX,EAAwBF,IAAxB,CAAP;AACH;;AAGD,UAAUG,OAAV,CAAkBC,MAAlB,EAA0B;AACtB,MAAI;AACA,UAAMP,KAAK,CAAC,IAAD,CAAX,CADA,CAEA;;AACA,UAAMC,GAAG,CAAC;AACNO,MAAAA,IAAI,EAAE,kBADA,CAEN;;AAFM,KAAD,CAAT;AAIH,GAPD,CAQA,OAAOC,GAAP,EAAY;AACR,UAAMR,GAAG,CAAC;AACNO,MAAAA,IAAI,EAAE,kBADA;AAENL,MAAAA,IAAI,EAAEM,GAAG,CAACC,QAAJ,CAAaP;AAFb,KAAD,CAAT;AAIH;AACJ;;AAID,UAAUQ,YAAV,GAAyB;AACrB,QAAMC,QAAQ,CAAC,kBAAD,EAAqBN,OAArB,EAA8B,IAA9B,CAAd;AACH;;AAED,eAAe,UAAUO,QAAV,GAAqB;AAChC,QAAMf,GAAG,CAAC,CACNC,IAAI,CAACY,YAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { all, fork, delay, put } from 'redux-saga/effects';\n\n\nfunction addPostAPI(data) {\n    return axios.post('/api/post', data)\n}\n\n\nfunction* addPost(action) {\n    try {\n        yield delay(1000);\n        //const result = yield call(addPostAPI, action.data)\n        yield put({\n            type: 'ADD_POST_SUCCESS',\n            //data: result.data\n        })\n    }\n    catch (err) {\n        yield put({\n            type: 'ADD_POST_FAILURE',\n            data: err.response.data\n        })\n    }\n}\n\n\n\nfunction* watchAddPost() {\n    yield throttle('ADD_POST_REQUEST', addPost, 1000)\n}\n\nexport default function* postSaga() {\n    yield all([\n        fork(watchAddPost)\n    ])\n}"]},"metadata":{},"sourceType":"module"}