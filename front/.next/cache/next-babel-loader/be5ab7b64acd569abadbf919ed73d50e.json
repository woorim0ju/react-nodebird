{"ast":null,"code":"import { all, fork } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction loginAPI(data) {\n  return axios.post('/api/login', data);\n} //const l = logIn({ type: 'LOG_IN_REQUEST', data: { id: goddino@abc.com}});\n\n\nfunction* logIn(action) {\n  try {\n    yield delay(1000); //const result = yield call(loginAPI, action.data)\n\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/loginout');\n}\n\nfunction* logOut() {\n  try {\n    yield delay(1000); //const result = yield call(logOutAPI)\n\n    yield put({\n      type: 'LOG_OUT_SUCCESS' //data: result.data\n\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_OUT_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest('LOG_IN_REQUEST', logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest('LOG_OUT_REQUEST', logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogOut)]);\n}","map":{"version":3,"sources":["C:/project/nodebird/front/sagas/user.js"],"names":["all","fork","axios","loginAPI","data","post","logIn","action","delay","put","type","err","response","logOutAPI","logOut","watchLogIn","takeLatest","watchLogOut","userSaga","watchLogin"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,QAA0B,oBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACpB,SAAOF,KAAK,CAACG,IAAN,CAAW,YAAX,EAAyBD,IAAzB,CAAP;AACH,C,CAED;;;AAGA,UAAUE,KAAV,CAAgBC,MAAhB,EAAwB;AACpB,MAAI;AACA,UAAMC,KAAK,CAAC,IAAD,CAAX,CADA,CAEA;;AACA,UAAMC,GAAG,CAAC;AACNC,MAAAA,IAAI,EAAE,gBADA;AAENN,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFP,KAAD,CAAT;AAIH,GAPD,CAQA,OAAOO,GAAP,EAAY;AACR,UAAMF,GAAG,CAAC;AACNC,MAAAA,IAAI,EAAE,gBADA;AAENN,MAAAA,IAAI,EAAEO,GAAG,CAACC,QAAJ,CAAaR;AAFb,KAAD,CAAT;AAIH;AACJ;;AAED,SAASS,SAAT,GAAqB;AACjB,SAAOX,KAAK,CAACG,IAAN,CAAW,eAAX,CAAP;AACH;;AAGD,UAAUS,MAAV,GAAmB;AACf,MAAI;AACA,UAAMN,KAAK,CAAC,IAAD,CAAX,CADA,CAEA;;AACA,UAAMC,GAAG,CAAC;AACNC,MAAAA,IAAI,EAAE,iBADA,CAEN;;AAFM,KAAD,CAAT;AAIH,GAPD,CAQA,OAAOC,GAAP,EAAY;AACR,UAAMF,GAAG,CAAC;AACNC,MAAAA,IAAI,EAAE,iBADA;AAENN,MAAAA,IAAI,EAAEO,GAAG,CAACC,QAAJ,CAAaR;AAFb,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUW,UAAV,GAAuB;AACnB,QAAMC,UAAU,CAAC,gBAAD,EAAmBV,KAAnB,CAAhB;AACH;;AAGD,UAAUW,WAAV,GAAwB;AACpB,QAAMD,UAAU,CAAC,iBAAD,EAAoBF,MAApB,CAAhB;AACH;;AAED,eAAe,UAAUI,QAAV,GAAqB;AAChC,QAAMlB,GAAG,CAAC,CACNC,IAAI,CAACkB,UAAD,CADE,EAENlB,IAAI,CAACgB,WAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { all, fork } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction loginAPI(data) {\n    return axios.post('/api/login', data)\n}\n\n//const l = logIn({ type: 'LOG_IN_REQUEST', data: { id: goddino@abc.com}});\n\n\nfunction* logIn(action) {\n    try {\n        yield delay(1000);\n        //const result = yield call(loginAPI, action.data)\n        yield put({\n            type: 'LOG_IN_SUCCESS',\n            data: action.data\n        })\n    }\n    catch (err) {\n        yield put({\n            type: 'LOG_IN_FAILURE',\n            data: err.response.data\n        })\n    }\n}\n\nfunction logOutAPI() {\n    return axios.post('/api/loginout')\n}\n\n\nfunction* logOut() {\n    try {\n        yield delay(1000);\n        //const result = yield call(logOutAPI)\n        yield put({\n            type: 'LOG_OUT_SUCCESS',\n            //data: result.data\n        })\n    }\n    catch (err) {\n        yield put({\n            type: 'LOG_OUT_FAILURE',\n            data: err.response.data\n        })\n    }\n}\n\nfunction* watchLogIn() {\n    yield takeLatest('LOG_IN_REQUEST', logIn)\n}\n\n\nfunction* watchLogOut() {\n    yield takeLatest('LOG_OUT_REQUEST', logOut)\n}\n\nexport default function* userSaga() {\n    yield all([\n        fork(watchLogin),\n        fork(watchLogOut),\n    ])\n}"]},"metadata":{},"sourceType":"module"}