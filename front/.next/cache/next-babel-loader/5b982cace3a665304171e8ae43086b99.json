{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\nodebird\\\\front\\\\components\\\\PostForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Form, Input, Button } from 'antd';\nimport React, { useCallback, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths;\n\n  var dispatch = useDispatch();\n  var imageInput = useRef();\n\n  var _useState = useState(''),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var onSubmit = useCallback(function () {\n    dispatch(); //post 추가하기\n\n    setText('');\n  }, []);\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  }, []);\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]); //imageInput.current로 image에 접근\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"how are you feeling today?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"image upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          \"float\": 'right'\n        },\n        htmlType: \"submit\",\n        children: \"twit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(function (v) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: v,\n            style: {\n              width: '200px'\n            },\n            alt: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 26\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostForm, \"VHmFF431Gt/0CyPReQmW7Sw/VHI=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/project/nodebird/front/components/PostForm.js"],"names":["Form","Input","Button","React","useCallback","useState","useRef","useDispatch","useSelector","addPost","PostForm","state","post","imagePaths","dispatch","imageInput","text","setText","onSubmit","onChangeText","e","target","value","onClickImageUpload","current","click","margin","map","v","display","width"],"mappings":";;;;AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,MAAvC,QAAqD,OAArD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,kBAAxB;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AAAA,qBACIF,WAAW,CAAC,UAACG,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CADf;AAAA,MACXC,UADW,gBACXA,UADW;;AAEnB,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,MAAMQ,UAAU,GAAGT,MAAM,EAAzB;;AAHmB,kBAIKD,QAAQ,CAAC,EAAD,CAJb;AAAA,MAIZW,IAJY;AAAA,MAINC,OAJM;;AAKnB,MAAMC,QAAQ,GAAGd,WAAW,CAAC,YAAM;AAC/BU,IAAAA,QAAQ,GADuB,CACnB;;AACZG,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAH2B,EAGzB,EAHyB,CAA5B;AAIA,MAAME,YAAY,GAAGf,WAAW,CAAC,UAACgB,CAAD,EAAO;AACpCH,IAAAA,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH,GAF+B,EAE7B,EAF6B,CAAhC;AAGA,MAAMC,kBAAkB,GAAGnB,WAAW,CAAC,YAAM;AACzCW,IAAAA,UAAU,CAACS,OAAX,CAAmBC,KAAnB;AACH,GAFqC,EAEnC,CAACV,UAAU,CAACS,OAAZ,CAFmC,CAAtC,CAZmB,CAcO;;AAE1B,sBACI,QAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAE;AAAV,KAAb;AAAwC,IAAA,OAAO,EAAC,qBAAhD;AAAsE,IAAA,QAAQ,EAAER,QAAhF;AAAA,4BACI,QAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,KAAK,EAAEF,IAAvB;AAA6B,MAAA,QAAQ,EAAEG,YAAvC;AAAqD,MAAA,SAAS,EAAE,GAAhE;AAAqE,MAAA,WAAW,EAAC;AAAjF;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAA,8BAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,MAA3B;AAA4B,QAAA,MAAM,MAAlC;AAAmC,QAAA,GAAG,EAAEJ;AAAxC;AAAA;AAAA;AAAA;AAAA,eAFJ,eAGI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEQ,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,eAII,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,KAAK,EAAE;AAAE,mBAAO;AAAT,SAA9B;AAAkD,QAAA,QAAQ,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,eAQI;AAAA,gBAAMV,UAAU,CAACc,GAAX,CAAe,UAACC,CAAD;AAAA,4BACjB;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,OAAO,EAAE;AAAX,WAAZ;AAAA,kCACI;AAAK,YAAA,GAAG,EAAED,CAAV;AAAa,YAAA,KAAK,EAAE;AAAEE,cAAAA,KAAK,EAAE;AAAT,aAApB;AAAwC,YAAA,GAAG,EAAEF;AAA7C;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAA,mCAAK,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,mBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,iBADiB;AAAA,OAAf;AAAN;AAAA;AAAA;AAAA;AAAA,aARJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAiBH,CAjCD;;GAAMlB,Q;UACqBF,W,EACND,W;;;KAFfG,Q;AAmCN,eAAeA,QAAf","sourcesContent":["import { Form, Input, Button } from 'antd';\nimport React, { useCallback, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost } from '../reducers/post';\n\nconst PostForm = () => {\n    const { imagePaths } = useSelector((state) => state.post);\n    const dispatch = useDispatch();\n    const imageInput = useRef();\n    const [text, setText] = useState('');\n    const onSubmit = useCallback(() => {\n        dispatch(); //post 추가하기\n        setText('');\n    }, []);\n    const onChangeText = useCallback((e) => {\n        setText(e.target.value);\n    }, []);\n    const onClickImageUpload = useCallback(() => {\n        imageInput.current.click();\n    }, [imageInput.current]); //imageInput.current로 image에 접근\n\n    return (\n        <Form style={{ margin: '10px 0 20px' }} encType='multipart/form-data' onFinish={onSubmit}>\n            <Input.TextArea value={text} onChange={onChangeText} maxLength={140} placeholder=\"how are you feeling today?\" />\n            <div>\n                {/* useRef를 이용해 dom, input에 접근하여 file 창 오픈 */}\n                <input type='file' multiple hidden ref={imageInput} />\n                <Button onClick={onClickImageUpload}>image upload</Button>\n                <Button type='primary' style={{ float: 'right' }} htmlType='submit'>twit</Button>\n            </div>\n            <div>{imagePaths.map((v) =>\n                <div style={{ display: 'inline-block' }}>\n                    <img src={v} style={{ width: '200px' }} alt={v} />\n                    <div><Button>delete</Button></div>\n                </div>)}\n            </div>\n        </Form>\n    )\n};\n\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}