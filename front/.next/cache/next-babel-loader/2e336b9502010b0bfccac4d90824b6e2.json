{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\project\\\\nodebird\\\\front\\\\components\\\\AppLayout.js\",\n    _templateObject,\n    _templateObject2,\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport { Menu, Input, Row, Col } from 'antd';\nimport { useSelector } from 'react-redux';\nimport UserProfile from '../components/UserProfile';\nimport LoginForm from '../components/LoginForm';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar SearchInput = styled(Input.Search)(_templateObject || (_templateObject = _taggedTemplateLiteral([\" \\nvertical-align: middle\"]))); //inline style에서 styled component 변경-> 리렌더링 최적화\n// 아래 스크롤바 지우기\n\n_c = SearchInput;\nvar Global = createGlobalStyle(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\" \\n    .ant-row { margin-right: 0 !important; margin-left: 0 !important}\\n    .ant-col: first-child {padding-left: 0 !important;}\\n    .ant-col: last-child {pddding-right: 0 !important;}\\n\"])));\n_c2 = Global;\n\nvar AppLayout = function AppLayout(_ref) {\n  _s();\n\n  var children = _ref.children;\n  //const [isLoggedIn, setIsLoggedIn] = useState(false); //dummy data로 login 처리 \n  //redux 처리, useSelector로 받아서 씀\n  var isLoggedIn = useSelector(function (state) {\n    return state.user.isLoggedIn;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Global, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Menu, {\n      mode: \"horizontal\",\n      children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"Nordbird\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 36\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/profile\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 43\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(SearchInput, {\n          enterButton: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 42\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: 8,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        md: 6,\n        children: isLoggedIn ? /*#__PURE__*/_jsxDEV(UserProfile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 35\n        }, _this) : /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 53\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        md: 12,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://goddino.tistory.com/\",\n          target: \"_blank\",\n          rel: \"noreferrer noopener\",\n          children: \"Made by Goddino\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(AppLayout, \"wwozkPYuXjHFfszlt2mcSB3o0is=\", false, function () {\n  return [useSelector];\n});\n\n_c3 = AppLayout;\nAppLayout.propTypes = {\n  children: PropTypes.node.isRequired //node.js아닌 react의 node\n\n};\nexport default AppLayout;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SearchInput\");\n$RefreshReg$(_c2, \"Global\");\n$RefreshReg$(_c3, \"AppLayout\");","map":{"version":3,"sources":["C:/project/nodebird/front/components/AppLayout.js"],"names":["React","useState","PropTypes","Link","Menu","Input","Row","Col","useSelector","UserProfile","LoginForm","styled","createGlobalStyle","SearchInput","Search","Global","AppLayout","children","isLoggedIn","state","user","propTypes","node","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport { Menu, Input, Row, Col } from 'antd';\nimport { useSelector } from 'react-redux';\n\nimport UserProfile from '../components/UserProfile';\nimport LoginForm from '../components/LoginForm';\nimport styled, { createGlobalStyle } from 'styled-components';\n\nconst SearchInput = styled(Input.Search)` \nvertical-align: middle` //inline style에서 styled component 변경-> 리렌더링 최적화\n\n// 아래 스크롤바 지우기\nconst Global = createGlobalStyle` \n    .ant-row { margin-right: 0 !important; margin-left: 0 !important}\n    .ant-col: first-child {padding-left: 0 !important;}\n    .ant-col: last-child {pddding-right: 0 !important;}\n`;\n\nconst AppLayout = ({ children }) => {\n    //const [isLoggedIn, setIsLoggedIn] = useState(false); //dummy data로 login 처리 \n    //redux 처리, useSelector로 받아서 씀\n    const isLoggedIn = useSelector((state) => state.user.isLoggedIn);\n\n    return (\n        <div>\n            <Global />\n            <Menu mode=\"horizontal\">\n                <Menu.Item>\n                    <Link href='/'><a>Nordbird</a></Link>\n                </Menu.Item>\n                <Menu.Item>\n                    <Link href='/profile'><a>Profile</a></Link>\n                </Menu.Item>\n                <Menu.Item>\n                    <SearchInput enterButton />\n                </Menu.Item>\n                <Menu.Item>\n                    <Link href='/signup'><a>Signup</a></Link>\n                </Menu.Item>\n            </Menu>\n            <Row gutter={8}>\n                <Col xs={24} md={6}>\n                    {/* dummy data로 login 처리 */}\n                    {/* LoginForm에서 로그인을 하는 순간 setIsLoggedIn = true -> isLoggedIn = true -> UserProfile component 실행 */}\n                    {/* {isLoggedIn? <UserProfile setIsLoggedIn={setIsLoggedIn}/> : <LoginForm setIsLoggedIn={setIsLoggedIn}/>} */}\n                    {isLoggedIn ? <UserProfile /> : <LoginForm />}\n                </Col>\n                <Col xs={24} md={12}>\n                    {children}\n                </Col>\n                <Col xs={24} md={6}>\n                    <a href=\"https://goddino.tistory.com/\" target=\"_blank\" rel=\"noreferrer noopener\">Made by Goddino</a>\n                </Col>\n            </Row>\n        </div>\n    )\n};\n\nAppLayout.propTypes = {\n    children: PropTypes.node.isRequired, //node.js아닌 react의 node\n};\n\nexport default AppLayout;"]},"metadata":{},"sourceType":"module"}