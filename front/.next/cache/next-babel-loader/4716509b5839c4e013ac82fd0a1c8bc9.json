{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, fork } from 'redux-saga/effects'; //yield는 await 과 같은 역할\n//call: 동기함수 호출, 결과를 블로킹하고 기다림 (axios.get().then()과 같음)\n//fork: 비동기함수 호출, 결과를 논블로킹 바로 다음 코드 진행(then()이 없는 것과 같음))\n//takeLatest: 실수로 두번 클릭 방지 \n//throttle: 마지막 함수가 호출된 후 일정시간 동안 다시 호출 되지 않\n\nimport postSaga from './post';\nimport userSaga from './user';\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([fork(postSaga), fork(userSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["C:/project/nodebird/front/sagas/index.js"],"names":["rootSaga","all","fork","postSaga","userSaga"],"mappings":";;oDAWyBA,Q;;AAXzB,SAASC,GAAT,EAAcC,IAAd,QAA0B,oBAA1B,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,OAAOC,QAAP,MAAqB,QAArB;AACA,OAAOC,QAAP,MAAqB,QAArB;AAEA,eAAe,SAAUJ,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CACNC,IAAI,CAACC,QAAD,CADE,EAEND,IAAI,CAACE,QAAD,CAFE,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, fork } from 'redux-saga/effects';\n\n//yield는 await 과 같은 역할\n//call: 동기함수 호출, 결과를 블로킹하고 기다림 (axios.get().then()과 같음)\n//fork: 비동기함수 호출, 결과를 논블로킹 바로 다음 코드 진행(then()이 없는 것과 같음))\n//takeLatest: 실수로 두번 클릭 방지 \n//throttle: 마지막 함수가 호출된 후 일정시간 동안 다시 호출 되지 않\n\nimport postSaga from './post';\nimport userSaga from './user';\n\nexport default function* rootSaga() {\n    yield all([\n        fork(postSaga),\n        fork(userSaga),\n    ])\n\n}"]},"metadata":{},"sourceType":"module"}